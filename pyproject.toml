[tool.poetry]
name = "rosbag2_pytorch_data_loader"
version = "0.0.1"
description = "PyTorch data loader for rosbag2 (mcap format)"
authors = ["Masaya Kataoka <ms.kataoka@gmail.com>"]
license = "Apache 2.0"

include = [
    # Source files for C extensions must be included in the source distribution.
    { path = "CMakeLists.txt", format = "sdist" },
    { path = "rosbag2_pytorch_data_loader/**/*.cpp", format = "sdist" },
    # C extensions must be included in the wheel distribution.
    { path = "rosbag2_pytorch_data_loader/**/*.pyd", format = "wheel" },
    { path = "rosbag2_pytorch_data_loader/**/*.so", format = "wheel" },
]
exclude = [
    "rosbag2_pytorch_data_loader/**/*.cpp",
    "rosbag2_pytorch_data_loader/**/*.pyd",
    "rosbag2_pytorch_data_loader/**/*.so",
]

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.poetry.dependencies]
python = "^3.10"
pyyaml = "*"
torch = { url = "https://download.pytorch.org/whl/cu118/torch-2.0.0%2Bcu118-cp310-cp310-linux_x86_64.whl"}
mcap-ros2-support= "^0.3.0"
Pillow = "^9.5.0"
pyzstd = "^0.15.7"
numpy = "^1.24.0"
torchvision = {url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.1%2Bcu118-cp310-cp310-linux_x86_64.whl" }
dataclass-wizard = "^0.22.2"
clip = {git = "https://github.com/openai/CLIP.git", rev = "a9b1bf5920416aaeaec965c25dd9e8f98c864f16"} # commit hash for 2023/1/21
detic = {git = "https://github.com/OUXT-Polaris/Detic.git", rev="main"} # original detic does not support poetry.
ftfy = "^6.1.1"
regex = "^2023.3.23"
tqdm = "^4.65.0"

[tool.poetry.dev-dependencies]
cmake = "^3.22.5"
scikit-build = "^0.15.0"
taskipy = "^1.10.2"
pre-commit = "^2.17.0"  # 2.18.0 blocked by pytohn 3.6.1
pytest = "^7.0.1"  # 7.1.0 blocked by pytohn 3.6.1
lark = "*"
coverage = "*"
pytest-cov = "^3.0.0"
black = "^23.3.0"
pip = "^23.1.2"
click = "8.0.4"

[build-system]
requires = ["poetry-core>=1.0.0", "scikit-build", "cmake", "ninja"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.html]
directory = "_htmlcov"

[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError()",
    "return NotImplemented",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203", # for black
]

[tool.isort]
profile = "black"

[tool.mypy]
pretty = true
show_error_codes = true
strict = true

[tool.pytest.ini_options]
addopts = [
    "--cov-report=html",
    "--cov-report=term",
    "--cov=rosbag2_pytorch_data_loader",
    "--doctest-modules",
    "--ignore=_skbuild",
    "--ignore=build.py",
    "--import-mode=importlib",
]
testpaths = ["tests",]

[tool.taskipy.tasks]
prepare.cmd = "pre-commit install && pre-commit install --hook-type commit-msg"
prepare.help = "sets up a development environment"

lint.cmd = "pre-commit run --all-files"
lint.help = "runs linters (+ fix)"

test.cmd  = "python run_gtests.py && pytest"
test.help = "runs tests"
